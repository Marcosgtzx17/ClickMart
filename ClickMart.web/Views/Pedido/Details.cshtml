@using ClickMart.web.DTOs.DetallePedidoDTOs
@using ClickMart.web.DTOs.ProductoDTOs
@model ClickMart.web.DTOs.PedidoDTOs.PedidoResponseDTO

@{
    ViewData["Title"] = $"Pedido #{Model.PedidoId}";
    var detalles = ViewBag.Detalles as List<DetallePedidoResponseDTO> ?? new();
    var productos = ViewBag.Productos as List<ProductoLiteDTO> ?? new();
    var newDetalle = ViewBag.NewDetalle as DetallePedidoCreateDTO
                     ?? new DetallePedidoCreateDTO { IdPedido = Model.PedidoId, Cantidad = 1 };

    bool puedeGestionar = (bool)(ViewBag.PuedeGestionar ?? false);

    decimal totalCalculado = detalles.Any()
        ? detalles.Sum(x => (decimal?)x.Subtotal ?? 0m)
        : (Model.Total ?? 0m);
}

<!-- HERO -->
<div class="store-hero mb-4 d-flex justify-content-between align-items-center">
    <div>
        <h1 class="store-title mb-1">Pedido #@Model.PedidoId</h1>
        <p class="store-subtitle mb-0">Detalle y gestión de la orden</p>
    </div>

    <div class="d-flex gap-2">
        @if (puedeGestionar)
        {
            <form asp-action="RecalcularTotal" method="post" class="d-inline">
                @Html.AntiForgeryToken()
                <input type="hidden" name="id" value="@Model.PedidoId" />
                <button type="submit" class="btn btn-outline-primary btn-lg">Recalcular total</button>
            </form>
            <a asp-action="Edit" asp-route-id="@Model.PedidoId" class="btn btn-warning btn-lg">Editar</a>
        }
        <a asp-action="Index" class="btn btn-primary btn-lg">Volver al listado</a>
    </div>
</div>

<!-- Card resumen -->
<div class="card shadow-sm border-0 rounded-4 p-3 p-md-4 mb-3">
    <div class="d-flex align-items-center flex-wrap gap-2 mb-3">
        <span class="chip-id">#@Model.PedidoId</span>
        <span class="badge rounded-pill bg-secondary-subtle text-secondary fw-semibold">Pago: @Model.PagoEstado</span>
    </div>

    <div class="detail-grid-cat">
        <div class="detail-item-cat"><div class="label-cat">Usuario</div><div class="value-cat fw-medium">@Model.UsuarioId</div></div>
        <div class="detail-item-cat"><div class="label-cat">Fecha</div><div class="value-cat">@Model.Fecha.ToString("yyyy-MM-dd")</div></div>
        <div class="detail-item-cat"><div class="label-cat">Método</div><div class="value-cat">@Model.MetodoPago</div></div>
        <div class="detail-item-cat"><div class="label-cat">Tarjeta (últimos 4)</div><div class="value-cat">@((Model.TarjetaUltimos4 ?? "-"))</div></div>
        <div class="detail-item-cat"><div class="label-cat">Total</div><div class="value-cat fw-medium">@totalCalculado.ToString("C")</div></div>
    </div>
</div>

<div class="row">
    <!-- Detalles -->
    <div class="col-lg-8">
        <div class="card shadow-sm border-0 rounded-4 mb-3">
            <div class="card-header bg-white fw-bold">Detalles</div>
            <div class="card-body p-0">
                @if (!detalles.Any())
                {
                    <div class="p-3">No hay detalles aún.</div>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0 align-middle">
                            <thead class="table-light">
                                <tr>
                                    <th>#</th>
                                    <th>Producto</th>
                                    <th>Cantidad</th>
                                    <th>Precio</th>
                                    <th>Subtotal</th>
                                    @if (puedeGestionar)
                                    {
                                        <th style="width: 220px" class="text-end">Acciones</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var d in detalles)
                                {
                                    var precio = (decimal?)d.PrecioUnitario ?? 0m;
                                    var subtotal = (decimal?)d.Subtotal ?? (precio * d.Cantidad);
                                    <tr>
                                        <td>@d.DetalleId</td>
                                        <td>@(d.ProductoNombre ?? $"ID {d.IdProducto}")</td>
                                        <td>@d.Cantidad</td>
                                        <td>@precio.ToString("C")</td>
                                        <td>@subtotal.ToString("C")</td>

                                        @if (puedeGestionar)
                                        {
                                            <td class="text-end">
                                                <form asp-action="UpdateDetalle" method="post" class="d-inline">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="pedidoId" value="@Model.PedidoId" />
                                                    <input type="hidden" name="DetalleId" value="@d.DetalleId" />
                                                    <input type="number" name="Cantidad" value="@d.Cantidad" min="1"
                                                           class="form-control form-control-sm d-inline-block me-1"
                                                           style="width: 90px" />
                                                    <button class="btn btn-sm btn-warning">Actualizar</button>
                                                </form>

                                                <form asp-action="DeleteDetalle" method="post" class="d-inline ms-1">
                                                    @Html.AntiForgeryToken()
                                                    <input type="hidden" name="pedidoId" value="@Model.PedidoId" />
                                                    <input type="hidden" name="id" value="@d.DetalleId" />
                                                    <button class="btn btn-sm btn-danger"
                                                            onclick="return confirm('¿Eliminar detalle?')">
                                                        Borrar
                                                    </button>
                                                </form>
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th colspan="4" class="text-end">Total</th>
                                    <th>@totalCalculado.ToString("C")</th>
                                    @if (puedeGestionar)
                                    {
                                        <th></th>
                                    }
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Agregar detalle (solo dueño) -->
    <div class="col-lg-4">
        @if (puedeGestionar)
        {
            <div class="card shadow-sm border-0 rounded-4 mb-3">
                <div class="card-header bg-white fw-bold">Agregar detalle</div>
                <div class="card-body">
                    <form asp-action="AddDetalle" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="IdPedido" value="@newDetalle.IdPedido" />

                        <div class="mb-3">
                            <label class="form-label form-label-ux">Producto</label>
                            <select name="IdProducto" class="form-select" required>
                                <option value="">-- Selecciona --</option>
                                @foreach (var p in productos)
                                {
                                    <option value="@p.ProductoId">@p.Nombre (@p.Precio.ToString("C"))</option>
                                }
                            </select>
                        </div>

                        <div class="mb-3">
                            <label class="form-label form-label-ux">Cantidad</label>
                            <input type="number" name="Cantidad" class="form-control" value="@newDetalle.Cantidad" min="1" required />
                        </div>

                        <div class="d-grid">
                            <button class="btn btn-primary">Agregar</button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Pago -->
            <div class="card shadow-sm border-0 rounded-4">
                <div class="card-header bg-white fw-bold">Pago</div>
                <div class="card-body">
                    <form asp-action="GenerarCodigo" method="post" class="mb-2">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.PedidoId" />
                        <button class="btn btn-outline-success w-100">Generar código</button>
                    </form>

                    <form asp-action="Confirmar" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="id" value="@Model.PedidoId" />
                        <div class="input-group">
                            <input name="Codigo" class="form-control" placeholder="Código de confirmación" />
                            <button class="btn btn-success">Confirmar</button>
                        </div>
                    </form>
                </div>
            </div>
        }
    </div>
</div>
